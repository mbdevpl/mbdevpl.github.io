<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>I'm Mateusz (Posts about Qt)</title><link>https://mbdevpl.github.io/</link><description></description><atom:link href="https://mbdevpl.github.io/tags/qt.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sat, 03 Jun 2017 11:33:52 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Smoothie</title><link>https://mbdevpl.github.io/posts/smoothie/</link><dc:creator>Mateusz Bysiek</dc:creator><description>&lt;div&gt;&lt;p&gt;Smoothie is a static fluid flow (or heat transfer, if you prefer) simulator, which uses
the finite element method. The core of the computational part of the application is done in C++,
user interface is made in Qt, while visualization is done in OpenGL.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mbdevpl.github.io/posts/smoothie/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>C++</category><category>GNU GPL 3.0</category><category>LaTeX</category><category>open source</category><category>OpenGL</category><category>Qt</category><guid>https://mbdevpl.github.io/posts/smoothie/</guid><pubDate>Thu, 23 Jan 2014 18:20:00 GMT</pubDate></item><item><title>AbstractOpenCL</title><link>https://mbdevpl.github.io/posts/abstract-opencl/</link><dc:creator>Mateusz Bysiek</dc:creator><description>&lt;div&gt;&lt;p&gt;A unified OpenCL abstraction layer for C++ and C#. Work in progress.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mbdevpl.github.io/posts/abstract-opencl/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>.NET</category><category>C++</category><category>Csharp</category><category>Linux</category><category>OpenCL</category><category>Qt</category><category>Windows</category><guid>https://mbdevpl.github.io/posts/abstract-opencl/</guid><pubDate>Thu, 04 Jul 2013 08:01:00 GMT</pubDate></item><item><title>VaDoR - Vanishing Domino pRoblem solver</title><link>https://mbdevpl.github.io/posts/vador/</link><dc:creator>Mateusz Bysiek</dc:creator><description>&lt;div&gt;&lt;p&gt;A 3-person team project that we did for Algorithms &amp;amp; Complexity course during our Bachelor
studies. The project introduced the problem starting with a rectangular board filled with domino
pieces, and defined certain rules for removing them. The task was to design and implement an
algorithm that removes (in accordance with rules) as many domino pieces as possible from the board
as quickly as possible. Hence the name VaDoR, from VAnishing DOmino pRoblem.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mbdevpl.github.io/posts/vador/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>C++</category><category>GNU GPL 3.0</category><category>open source</category><category>Qt</category><guid>https://mbdevpl.github.io/posts/vador/</guid><pubDate>Wed, 21 Nov 2012 20:40:00 GMT</pubDate></item></channel></rss>